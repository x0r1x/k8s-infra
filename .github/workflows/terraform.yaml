name: IaC & K8s Deployment
on:
  push:
    branches: [main]
  workflow_dispatch:
  pull_request:

env:
  K8S_CLUSTER_NAME: yc-k8s-cluster

jobs:
  terraform:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    environment: production
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.YC_S3_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.YC_S3_SECRET_KEY }}
      TF_VAR_YC_S3_BUCKET: ${{ secrets.YC_S3_BUCKET }}
      TF_VAR_yc_cloud_id: ${{ secrets.YC_CLOUD_ID }}
      TF_VAR_yc_folder_id: ${{ secrets.YC_FOLDER_ID }}
      TF_VAR_yc_sa_key: ${{ secrets.YC_SA_KEY }}
      TF_VAR_yc_sa_id: ${{ secrets.YC_SA_ID }}
      TF_VAR_ssh_public_key: ${{ secrets.YC_SSH_PUBLIC_KEY }}
      TF_VAR_ssh_username: ${{ secrets.YC_SSH_USERNAME }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: |
          terraform init -reconfigure \
            -backend-config="bucket=$TF_VAR_YC_S3_BUCKET"

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false

      - name: Generate Inventory
        run: |
          mkdir -p tmp/inventory
          terraform output -raw kubespray_inventory > tmp/inventory/hosts.yml

          # Debug вывод
          echo "=== DEBUG: INVENTORY CONTENTS ==="
          cat tmp/inventory/hosts.yml
          echo "==============================="

      - name: Upload Inventory
        uses: actions/upload-artifact@v4
        with:
          name: kubespray-inventory
          path: tmp/inventory/


  kubespray:
    name: "Deploy Kubernetes"
    runs-on: ubuntu-latest
    needs: terraform
    environment: production

    steps:

      - name: Checkout Resources
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            resources/k8s/
          sparse-checkout-cone-mode: true

      - name: Download Inventory
        uses: actions/download-artifact@v4
        with:
          name: kubespray-inventory
          path: tmp/inventory/

      - name: Checkout Kubespray
        uses: actions/checkout@v4
        with:
          repository: kubernetes-sigs/kubespray
          ref: master
          path: kubespray
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Ansible
        run: |
          pip install --upgrade pip
          pip install yamllint ansible-lint
          pip install -r kubespray/requirements.txt

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.YC_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Preparing Kubespray
        working-directory: ./kubespray
        run: |
          # Создаем директорию инвентаря
          mkdir -p inventory/$K8S_CLUSTER_NAME

          # Копируем шаблонные файлы
          echo "=== Copy config template ==="
          cp -rfp inventory/sample/* inventory/$K8S_CLUSTER_NAME/

      - name: Config Kubespray
        working-directory: ./kubespray
        run: |
          echo "=== Check repository structure ==="
          tree ${{ github.workspace }}/tmp
          tree ${{ github.workspace }}/resources

          echo "=== Copy custom group_vars ==="
          cp -f ${{ github.workspace }}/resources/k8s/group_vars/k8s_cluster/addons.yml inventory/$K8S_CLUSTER_NAME/group_vars/k8s_cluster/addons.yml
          cp -f ${{ github.workspace }}/resources/k8s/group_vars/all/all.yml inventory/$K8S_CLUSTER_NAME/group_vars/all/all.yml 
          
          # Копируем наш инвентарь в директорию Kubespray
          echo "=== Copy inventory file ==="
          cp -f ${{ github.workspace }}/tmp/inventory/hosts.yml inventory/$K8S_CLUSTER_NAME/hosts.yml
          
          # Проверяем существование файла
          echo "=== Check inventory file ==="
          ls -la inventory/$K8S_CLUSTER_NAME/
          test -f inventory/$K8S_CLUSTER_NAME/hosts.yml || exit 1

          # Проверяем результат
          echo "=== Final group_vars structure ==="
          tree inventory/$K8S_CLUSTER_NAME
  
      - name: Validate Inventory
        working-directory: ./kubespray
        run: |
          # Проверяем синтаксис YAML
          yamllint inventory/$K8S_CLUSTER_NAME/hosts.yml
          
          # Проверяем структуру инвентаря
          ansible-inventory -i inventory/$K8S_CLUSTER_NAME/hosts.yml --list

      - name: Test SSH Connection
        working-directory: ./kubespray
        run: |
          ansible -i inventory/$K8S_CLUSTER_NAME/hosts.yml all -m ping -u ${{ secrets.YC_SSH_USERNAME }}

      - name: Run Kubespray
        working-directory: ./kubespray
        run: |
          mkdir -p tmp/kubeconfig

          # Запускаем kubespray
          ansible-playbook -i inventory/$K8S_CLUSTER_NAME/hosts.yml \
            --private-key ~/.ssh/id_rsa \
            -m fetch \
            -a "src=/etc/kubernetes/admin.conf dest=${{ github.workspace }}/tmp/kubeconfig/admin.conf flat=yes" \
            -u ${{ secrets.YC_SSH_USERNAME }} \
            -b --become-user=root \
            cluster.yml

      - name: Update Kubeconfig Server Address
        working-directory: ./kubespray
        run: |
          # Получаем внешний IP из инвентаря
          EXTERNAL_IP=$(ansible-inventory -i inventory/$K8S_CLUSTER_NAME/hosts.yml --list | jq -r '.all.hosts.master1.ansible_host')
          
          # Заменяем внутренний адрес на внешний
          sed -i "s|server:.*|server: https://${EXTERNAL_IP}:6443|g" ${{ github.workspace }}/tmp/kubeconfig/admin.conf
  
      - name: Upload Modified Kubeconfig
        uses: actions/upload-artifact@v4
        with:
          name: kubeconfig
          path: ${{ github.workspace }}/tmp/kubeconfig/